diff --git a/src/python/CMakeLists.txt b/src/python/CMakeLists.txt
index faaf56914a22d7d5a2b654a1348546eeff366314..3d8ec92ad44e0d0e93b2e7d568c68e7c9825e98e 100644
--- a/src/python/CMakeLists.txt
+++ b/src/python/CMakeLists.txt
@@ -1,10 +1,9 @@
 project(pypamtest C)
 
-add_subdirectory(python2)
 add_subdirectory(python3)
 
 if (WITH_WNO_CAST_FUNCTION_TYPE)
     set_source_files_properties(pypamtest.c
-                                DIRECTORY python2 python3
+                                DIRECTORY python3
                                 PROPERTIES COMPILE_OPTIONS "-Wno-cast-function-type")
 endif()
diff --git a/src/python/python2/CMakeLists.txt b/src/python/python2/CMakeLists.txt
deleted file mode 100644
index d0b0ed2773fe8dd70efa80dfc6431e540ee526c0..0000000000000000000000000000000000000000
--- a/src/python/python2/CMakeLists.txt
+++ /dev/null
@@ -1,45 +0,0 @@
-project(python2-pamtest C)
-
-if (NOT PYTHON2_LIBRARY)
-    unset(PYTHON_EXECUTABLE CACHE)
-    unset(PYTHON_INCLUDE_DIR CACHE)
-    unset(PYTHON_LIBRARY CACHE)
-    unset(PYTHON_SITELIB CACHE)
-    unset(PYTHONLIBS_FOUND CACHE)
-    unset(PYTHONLIBS_VERSION_STRING CACHE)
-
-    find_package(PythonLibs 2)
-    find_package(PythonInterp 2)
-    find_package(PythonSiteLibs 2)
-
-    if (PYTHONLIBS_FOUND)
-        set(PYTHON2_EXECUTABLE ${PYTHON_EXECUTABLE} CACHE FILEPATH "PYTHON2_EXECUTABLE")
-        set(PYTHON2_INCLUDE_DIR ${PYTHON_INCLUDE_DIR})
-        set(PYTHON2_LIBRARY ${PYTHON_LIBRARY})
-        set(PYTHON2_SITELIB ${PYTHON_SITELIB})
-    endif()
-
-    unset(PYTHON_EXECUTABLE CACHE)
-    unset(PYTHON_INCLUDE_DIR CACHE)
-    unset(PYTHON_LIBRARY CACHE)
-    unset(PYTHON_SITELIB CACHE)
-    unset(PYTHONLIBS_FOUND CACHE)
-    unset(PYTHONLIBS_VERSION_STRING CACHE)
-endif()
-
-if (PYTHON2_INCLUDE_DIR AND PYTHON2_LIBRARY AND PYTHON2_SITELIB)
-    include_directories(${CMAKE_BINARY_DIR})
-    include_directories(${pam_wrapper-headers_DIR})
-    include_directories(${PYTHON2_INCLUDE_DIR})
-
-    python_add_module(python2-pamtest ${pypamtest_SOURCE_DIR}/pypamtest.c)
-    target_link_libraries(python2-pamtest pamtest::pamtest ${PYTHON2_LIBRARY})
-    target_compile_options(python2-pamtest
-                           PRIVATE ${DEFAULT_C_COMPILE_FLAGS})
-    set_target_properties(python2-pamtest PROPERTIES OUTPUT_NAME "pypamtest")
-
-    install(TARGETS
-                python2-pamtest
-            DESTINATION
-                ${CMAKE_INSTALL_PREFIX}/${PYTHON2_SITELIB})
-endif()
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index de8da0504918ea7be2cca090aae00a4267b7a0ba..9d56f212f9b7431090a71b5ed0518801a4d2c20f 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -90,15 +90,6 @@ if (CMAKE_BUILD_TYPE)
 endif()
 
 if (RUN_PYTHON_TESTS)
-    if (PYTHON2_EXECUTABLE)
-        add_test(NAME
-                    py2pamtest_test
-                 COMMAND
-                    ${PYTHON2_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/pypamtest_test.py)
-
-        add_cmocka_test_environment(py2pamtest_test)
-    endif()
-
     if (PYTHON3_EXECUTABLE)
         add_test(NAME
                     py3pamtest_test
diff --git a/tests/pypamtest_test.py b/tests/pypamtest_test.py
index d49a1104e54569f839919551e3cb6d67b01fbce1..57fa2cdfa78b7e4e1d86df02b4c57deaa097c6a9 100755
--- a/tests/pypamtest_test.py
+++ b/tests/pypamtest_test.py
@@ -20,7 +20,7 @@ class PyPamTestImport(unittest.TestCase):
         if sys.hexversion >= 0x3000000:
             self.modpath = os.path.join(os.getcwd(), "../src/python/python3")
         else:
-            self.modpath = os.path.join(os.getcwd(), "../src/python/python2")
+            self.assertTrue(False)
         self.system_path = sys.path[:]
         sys.path = [ self.modpath ]
 
@@ -142,12 +142,12 @@ class PyPamTestRunTest(unittest.TestCase):
         neo_password = "wrong_secret"
         tc = pypamtest.TestCase(pypamtest.PAMTEST_AUTHENTICATE)
 
-        self.assertRaisesRegexp(pypamtest.PamTestError,
-                                "Error \[2\]: Test case { pam_operation \[0\] "
-                                "expected_rv \[0\] flags \[0\] } "
-                                "returned \[\d\]",
-                                pypamtest.run_pamtest,
-                                "neo", "matrix_py", [tc], [ neo_password ])
+        self.assertRaisesRegex(pypamtest.PamTestError,
+                               "Error \[2\]: Test case { pam_operation \[0\] "
+                               "expected_rv \[0\] flags \[0\] } "
+                               "returned \[\d\]",
+                               pypamtest.run_pamtest,
+                               "neo", "matrix_py", [tc], [ neo_password ])
 
 if __name__ == "__main__":
     error = 0
